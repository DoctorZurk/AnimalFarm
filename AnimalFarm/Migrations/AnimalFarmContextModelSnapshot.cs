// <auto-generated />
using System;
using AnimalFarm.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AnimalFarm.Migrations
{
    [DbContext(typeof(AnimalFarmContext))]
    partial class AnimalFarmContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AnimalFarm.Models.AnimalFarmItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate");

                    b.Property<int>("Happiness");

                    b.Property<int>("Hunger");

                    b.Property<bool>("IsAlive");

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Type");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("AFItems");
                });

            modelBuilder.Entity("AnimalFarm.Models.AnimalFarmUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddr");

                    b.Property<bool>("IsActiveUser");

                    b.Property<bool>("IsUserOnline");

                    b.Property<DateTime>("LastLoginDate");

                    b.Property<string>("NickName");

                    b.Property<int>("Rank");

                    b.HasKey("Id");

                    b.ToTable("AFUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
